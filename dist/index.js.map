{"version":3,"file":"index.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,aAAc,GAAIH,GACC,iBAAZC,QACdA,QAAoB,WAAID,IAExBD,EAAiB,WAAIC,IARvB,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,gCC+B5EI,EAAkB,IA1BxB,WAGI,aACId,KAAKe,IAAM,IAAIC,IACfhB,KAAKiB,MAAQ,EAmBrB,OAhBI,YAAAC,IAAA,SAAIC,EAAYJ,GAEVf,KAAKe,IAAIK,IAAID,IAAKnB,KAAKe,IAAIM,IAAIF,GADlB,SAAC,G,IAAEG,EAAK,QAAEC,EAAK,QAAuC,OAAAR,EAAIO,GAAOE,GAAGD,OAIvF,YAAAE,OAAA,SAAON,GACLnB,KAAKe,IAAIW,OAAOP,IAGlB,YAAAQ,KAAA,SAAKR,EAAYS,G,MACf,OAAuB,QAAhB,EAAA5B,KAAKe,IAAIP,IAAIW,UAAG,eAAGS,IAG5B,YAAAC,aAAA,SAAaV,GAAb,WACE,OAAO,WAAM,SAAKM,OAAL,KAEnB,EAxBA,IAoFA,QAxCA,WAME,WAAYK,EAAqBC,QAAA,IAAAA,IAAAA,EAAA,IAC/B/B,KAAKmB,GAAQa,KAAKC,MAAK,OAAMnB,EAAgBG,MAC7CjB,KAAK8B,KAAOA,EACZ9B,KAAK+B,KAAOA,EACZ/B,KAAKkC,OAAS,GA4BlB,OAzBE,YAAAC,KAAA,SAAKX,GAEH,OADAxB,KAAKkC,OAAOE,KAAK,CAAEC,KAAM,OAAQb,GAAE,IAC5BxB,MAGT,YAAAsC,MAAA,SAAMd,GAEJ,OADAxB,KAAKkC,OAAOE,KAAK,CAAEC,KAAM,QAASb,GAAE,IAC7BxB,MAGT,YAAAuC,QAAA,SAAQf,GAEN,OADAxB,KAAKkC,OAAOE,KAAK,CAAEC,KAAM,UAAWb,GAAE,IAC/BxB,MAGT,YAAAa,KAAA,WACE,IAAMM,EAAKnB,KAAKmB,GAChBnB,KAAKkC,OAAOE,KAAK,CAAEC,KAAM,UAAWb,GAAIV,EAAgBe,aAAaV,KACrEL,EAAgBI,IAAIC,E,+LAAE,IAAMnB,KAAKkC,QAAM,IACvC,IAAMM,EAAQxC,KAAKkC,OAAOO,KAAI,SAAC,GAAa,OAAP,UAIrC,OApDJ,SAAuBtB,EAAYuB,EAAuBC,GACxDA,EAAWC,SAAQ,SAACP,EAAOf,GACzB,OAAQe,GACN,IAAK,OACHK,EAAUA,EAAQP,MAAK,SAACZ,GAAU,OAAAT,EAAgBa,KAAKR,EAAI,CAAEG,MAAK,EAAEC,MAAlC,OAClC,MACF,IAAK,QACHmB,EAAUA,EAAQJ,OAAM,SAACO,GAAU,OAAA/B,EAAgBa,KAAKR,EAAI,CAAEG,MAAK,EAAEC,MAAlC,OACnC,MACF,IAAK,UACHmB,EAAUA,EAAQH,SAAQ,WAAM,OAAAzB,EAAgBa,KAAKR,EAAI,CAAEG,MAA3B,WAwCpCwB,CAAc3B,EADEnB,KAAK8B,KAAI,MAAT9B,KAAaA,KAAK+B,MACPS,GAC3BxC,KAAKkC,OAASlC,KAAK+B,KAAO/B,KAAK8B,KAAO9B,KAAKmB,QAAK4B,EACzCjC,EAAgBe,aAAaV,IAExC,EAtCA,G","sources":["webpack://AsyncAbort/webpack/universalModuleDefinition","webpack://AsyncAbort/webpack/bootstrap","webpack://AsyncAbort/webpack/runtime/define property getters","webpack://AsyncAbort/webpack/runtime/hasOwnProperty shorthand","webpack://AsyncAbort/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AsyncAbort\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AsyncAbort\"] = factory();\n\telse\n\t\troot[\"AsyncAbort\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","type Callback = (...args: any[]) => any;\ntype AsyncFunction = (...args: any[]) => Promise<any>;\ntype BlockType = 'then' | 'catch' | 'finally';\ntype Block = { type: BlockType, cb: Callback };\n\nclass Observer {\n    cbs: Map<string, Callback>;\n    count: number;\n    constructor() {\n        this.cbs = new Map();\n        this.count = 0;\n    }\n\n    add(id: string, cbs: Array<Block>) {\n      const combined = ({ index, value } : { value: any, index: number }) => cbs[index].cb(value);\n      if(!this.cbs.has(id)) this.cbs.set(id, combined);\n    }\n\n    remove(id: string) {\n      this.cbs.delete(id);\n    }\n\n    emit(id: string, event: any) {\n      return this.cbs.get(id)?.(event);\n    }\n\n    createCancel(id: string) {\n      return () => this.remove(id);\n    }\n}\n\nconst PromiseObserver = new Observer();\n\nfunction extendPromise(id: string, promise: Promise<any>, chainTypes: Array<BlockType>) {\n  chainTypes.forEach((type , index) => {\n    switch (type) {\n      case 'then':\n        promise = promise.then((value) => PromiseObserver.emit(id, { index, value }));\n        break;\n      case 'catch':\n        promise = promise.catch((error) => PromiseObserver.emit(id, { index, value: error }));\n        break;\n      case 'finally':\n        promise = promise.finally(() => PromiseObserver.emit(id, { index }));\n        break;\n    }\n  });\n}\n\nclass AsyncAbort {\n  private id: string;\n  private func: AsyncFunction;\n  private args: Array<any>;\n  private chains: Array<Block>;\n\n  constructor(func: AsyncFunction, args: Array<any> = []) {\n    this.id = `${Date.now()}_${++PromiseObserver.count}`;\n    this.func = func;\n    this.args = args;\n    this.chains = [];\n  }\n\n  then(cb: Callback): AsyncAbort {\n    this.chains.push({ type: 'then', cb});\n    return this;\n  }\n\n  catch(cb: Callback): AsyncAbort {\n    this.chains.push({ type: 'catch', cb });\n    return this;\n  }\n\n  finally(cb: Callback): AsyncAbort {\n    this.chains.push({ type: 'finally', cb });\n    return this;\n  }\n\n  call(): Callback {\n    const id = this.id;\n    this.chains.push({ type: 'finally', cb: PromiseObserver.createCancel(id)});\n    PromiseObserver.add(id, [...this.chains]);\n    const types = this.chains.map(({ type }) => type);\n    const promise = this.func(...this.args);\n    extendPromise(id, promise, types);\n    this.chains = this.args = this.func = this.id = undefined;\n    return PromiseObserver.createCancel(id);\n  }\n}\n\nexport default AsyncAbort;"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","PromiseObserver","cbs","Map","count","add","id","has","set","index","value","cb","remove","delete","emit","event","createCancel","func","args","Date","now","chains","then","push","type","catch","finally","types","map","promise","chainTypes","forEach","error","extendPromise","undefined"],"sourceRoot":""}